Questions and Answers from StrataScratch

Q1. Write a query that calculates the difference between the highest salaries found in the marketing and engineering departments. Output just the absolute difference in salaries.
Code:
  select
    (select max(salary)
    from db_dept d
    join db_employee e
        on d.id=e.department_id
    where
        department='marketing')
    -
    (select max(salary)
    from db_dept d
    join db_employee e
        on d.id=e.department_id
    where
        department='engineering')
    AS
    salary_difference
;
--48187 marketing
--45787 engineering

Output:
salary_difference
2400


Q2: We have a table with employees and their salaries, however, some of the records are old and contain outdated salary information. Find the current salary of each employee assuming that salaries increase each year. Output their id, first name, last name, department ID, and current salary. Order your list by employee ID in ascending order.

Table: ms_employee_salary

Code:
select
    id,
    first_name,
    last_name,
    department_id,
    max(salary) as current_salary
    from ms_employee_salary e
    group by
        id,
        first_name,
        last_name,
        department_id
    order by id ASC
;

Output:
id	first_name	last_name	department_id	current_salary
1	Todd	Wilson	1006	110000
2	Justin	Simon	1005	130000
3	Kelly	Rosario	1002	42689
4	Patricia	Powell	1004	170000


Q3: Find the last time each bike was in use. Output both the bike number and the date-timestamp of the bike's last use (i.e., the date-time the bike was returned). Order the results by bikes that were most recently used.
Code
select 
    bike_number,
    max(end_time) last_used
from dc_bikeshare_q1_2012 bike
group by 
    bike_number
order by
    last_used DESC
;

Output:
bike_number	last_used
W01278	2012-03-31 19:28:00
W01097	2012-03-31 15:37:00


Q4: Find the number of rows for each review score earned by 'Hotel Arena'. Output the hotel name (which should be 'Hotel Arena'), review score along with the corresponding number of rows with that score for the specified hotel
Code:
select 
    hotel_name,
    reviewer_score,
    count(reviewer_score) no_of_reviews
    from hotel_reviews
where hotel_name='Hotel Arena'
group by
    hotel_name,
    reviewer_score
order by reviewer_score DESC
;

Output:
hotel_name	reviewer_score	no_of_reviews
Hotel Arena	9.6	2
Hotel Arena	8.8	2
Hotel Arena	8.3	2
Hotel Arena	7.1	1

Q5: ount the number of movies that Abigail Breslin was nominated for an oscar.
Code:
select count(*) from oscar_nominees
where
    nominee='Abigail Breslin'
;
Output:
count
1

Q6: Find all posts which were reacted to with a heart. For such posts output all columns from facebook_posts table.
Code:
select 
    distinct
    p.*
from facebook_posts p
join
    facebook_reactions r
    on p.post_id=r.post_id
where r.reaction='heart'
;

Output:
post_id	poster	post_text	post_keywords	post_date
1	1	Lebron James is top class.	[basketball,lebron_james,nba]	2019-01-02


Q7:Meta/Facebook has developed a new programing language called Hack.To measure the popularity of Hack they ran a survey with their employees. The survey included data on previous programing familiarity as well as the number of years of experience, age, gender and most importantly satisfaction with Hack. Due to an error location data was not collected, but your supervisor demands a report showing average popularity of Hack by office location. Luckily the user IDs of employees completing the surveys were stored.
Based on the above, find the average popularity of the Hack per office location.
Output the location along with the average popularity.
Code:
select 
    e.location,
    avg(h.popularity) avg_popularity
    from facebook_employees e
join
    facebook_hack_survey h
    on e.id=h.employee_id
group by e.location
order by avg_popularity DESC
;

Output:
location	avg_popularity
India	7.5
USA	4.6
UK	4.333
Switzerland	1


Q8: Find all Lyft drivers who earn either equal to or less than 30k USD or equal to or more than 70k USD.
Output all details related to retrieved records.
Code:
select 
    * 
from lyft_drivers
where
    yearly_salary <= 30000
    OR
    yearly_salary >= 70000
;

Q9: Find libraries who haven't provided the email address in circulation year 2016 but their notice preference definition is set to email.
Output the library code.
Code:
select 
    home_library_code 
from library_usage
where
    circulation_active_year= 2016 and
    notice_preference_definition = 'email' and
    provided_email_address is false
;


Q10: Compare each employee's salary with the average salary of the corresponding department.
Output the department, first name, and salary of employees along with the average salary of that department.
Code:
select 
    department,
    first_name,
    salary,
    avg(salary) over (partition by department)
from employee
;

Q11: Find order details made by Jill and Eva.
Consider the Jill and Eva as first names of customers.
Output the order date, details and cost along with the first name.
Order records based on the customer id in ascending order.

Code:
select 
    c.first_name,
    o.order_date,
    o.order_details,
    o.total_order_cost
from customers c
join orders o
    on c.id=o.cust_id
where c.first_name='Jill'
        or c.first_name='Eva'
order by o.cust_id asc
;


Q12: Find the details of each customer regardless of whether the customer made an order. Output the customer's first name, last name, and the city along with the order details.
Sort records based on the customer's first name and the order details in ascending order.

Code:
select 
    c.first_name,
    c.last_name,
    c.city,
    o.order_details
from customers c
full join orders o
    on c.id=o.cust_id
order by 
    c.first_name, o.order_details asc
;
